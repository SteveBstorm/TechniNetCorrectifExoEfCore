// <auto-generated />
using CorrectifExoEfCore.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CorrectifExoEfCore.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231012071203_firsttry")]
    partial class firsttry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CorrectifExoEfCore.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("RealisatorId")
                        .HasColumnType("int");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("RealisatorId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Film", (string)null);

                    b.HasCheckConstraint("CK_ReleaseYear", "ReleaseYear > 1975");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Science-Fiction",
                            RealisatorId = 10,
                            ReleaseYear = 1977,
                            Title = "Star Wars : Un nouvel espoir"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Science-Fiction",
                            RealisatorId = 10,
                            ReleaseYear = 1980,
                            Title = "Star Wars : L'empire contre-attaque"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Science-Fiction",
                            RealisatorId = 10,
                            ReleaseYear = 1983,
                            Title = "Star Wars : Le retour du Jedi"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Société",
                            RealisatorId = 8,
                            ReleaseYear = 2005,
                            Title = "Hooligans"
                        },
                        new
                        {
                            Id = 5,
                            Genre = "Heroic-Fantasy",
                            RealisatorId = 9,
                            ReleaseYear = 2001,
                            Title = "LOTR - La communauté de l'anneau"
                        },
                        new
                        {
                            Id = 6,
                            Genre = "Heroic-Fantasy",
                            RealisatorId = 9,
                            ReleaseYear = 2002,
                            Title = "LOTR - Les deux tours"
                        },
                        new
                        {
                            Id = 7,
                            Genre = "Heroic-Fantasy",
                            RealisatorId = 9,
                            ReleaseYear = 2003,
                            Title = "LOTR - Le retour du roi"
                        });
                });

            modelBuilder.Entity("CorrectifExoEfCore.Entities.FilmPerson", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("Casting");

                    b.HasData(
                        new
                        {
                            PersonId = 3,
                            FilmId = 1
                        },
                        new
                        {
                            PersonId = 4,
                            FilmId = 1
                        },
                        new
                        {
                            PersonId = 5,
                            FilmId = 1
                        },
                        new
                        {
                            PersonId = 3,
                            FilmId = 2
                        },
                        new
                        {
                            PersonId = 4,
                            FilmId = 2
                        },
                        new
                        {
                            PersonId = 5,
                            FilmId = 2
                        },
                        new
                        {
                            PersonId = 3,
                            FilmId = 3
                        },
                        new
                        {
                            PersonId = 4,
                            FilmId = 3
                        },
                        new
                        {
                            PersonId = 5,
                            FilmId = 3
                        },
                        new
                        {
                            PersonId = 1,
                            FilmId = 4
                        },
                        new
                        {
                            PersonId = 2,
                            FilmId = 4
                        },
                        new
                        {
                            PersonId = 1,
                            FilmId = 5
                        },
                        new
                        {
                            PersonId = 6,
                            FilmId = 5
                        },
                        new
                        {
                            PersonId = 7,
                            FilmId = 5
                        },
                        new
                        {
                            PersonId = 1,
                            FilmId = 6
                        },
                        new
                        {
                            PersonId = 6,
                            FilmId = 6
                        },
                        new
                        {
                            PersonId = 7,
                            FilmId = 6
                        },
                        new
                        {
                            PersonId = 1,
                            FilmId = 7
                        },
                        new
                        {
                            PersonId = 6,
                            FilmId = 7
                        },
                        new
                        {
                            PersonId = 7,
                            FilmId = 7
                        });
                });

            modelBuilder.Entity("CorrectifExoEfCore.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Firstname = "Elijah",
                            Lastname = "Wood"
                        },
                        new
                        {
                            Id = 2,
                            Firstname = "Charlie",
                            Lastname = "Hunnam"
                        },
                        new
                        {
                            Id = 3,
                            Firstname = "Harisson",
                            Lastname = "Ford"
                        },
                        new
                        {
                            Id = 4,
                            Firstname = "Mark",
                            Lastname = "Hammil"
                        },
                        new
                        {
                            Id = 5,
                            Firstname = "Carrie",
                            Lastname = "Fisher"
                        },
                        new
                        {
                            Id = 6,
                            Firstname = "Vigo",
                            Lastname = "Mortensen"
                        },
                        new
                        {
                            Id = 7,
                            Firstname = "Orlando",
                            Lastname = "Bloom"
                        },
                        new
                        {
                            Id = 8,
                            Firstname = "Lexi",
                            Lastname = "Alexander"
                        },
                        new
                        {
                            Id = 9,
                            Firstname = "Peter",
                            Lastname = "Jackson"
                        },
                        new
                        {
                            Id = 10,
                            Firstname = "Georges",
                            Lastname = "Lucas"
                        });
                });

            modelBuilder.Entity("CorrectifExoEfCore.Entities.Film", b =>
                {
                    b.HasOne("CorrectifExoEfCore.Entities.Person", "Realisator")
                        .WithMany("AsReal")
                        .HasForeignKey("RealisatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Realisator");
                });

            modelBuilder.Entity("CorrectifExoEfCore.Entities.FilmPerson", b =>
                {
                    b.HasOne("CorrectifExoEfCore.Entities.Film", "Film")
                        .WithMany("Casting")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CorrectifExoEfCore.Entities.Person", "Person")
                        .WithMany("AsActor")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CorrectifExoEfCore.Entities.Film", b =>
                {
                    b.Navigation("Casting");
                });

            modelBuilder.Entity("CorrectifExoEfCore.Entities.Person", b =>
                {
                    b.Navigation("AsActor");

                    b.Navigation("AsReal");
                });
#pragma warning restore 612, 618
        }
    }
}
